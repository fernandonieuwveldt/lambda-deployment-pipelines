name: Deploy Lambda function with Docker container

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      run: |
        export ECR_REPOSITORY=/lambda-container-repo
        export IMAGE_TAG=latest
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy Lambda function
      run: |
        export ECR_REPOSITORY=305611566641.dkr.ecr.us-east-1.amazonaws.com/lambda-container-repo
        export IMAGE_TAG=latest
        export IMAGE_URI=$ECR_REPOSITORY:$IMAGE_TAG
        FUNCTION_ARN=$(aws lambda get-function --function-name lambda-container --query 'Configuration.FunctionArn' --output text || true)
        if [ "$FUNCTION_ARN" == "None" ]; then
          aws lambda create-function --function-name lambda-container --package-type Image --code ImageUri=$IMAGE_URI --timeout 15 --memory-size 256
        else
          aws lambda update-function-configuration --function-name lambda-container --package-type Image --code ImageUri=$IMAGE_URI
        fi
